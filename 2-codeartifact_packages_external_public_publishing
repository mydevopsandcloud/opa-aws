package wiz

default result = "fail"

# Pass if all internal packages are not allowed to publish to upstream (i.e., no public access)
result = "pass" {
    count(input.repositories) > 0
    all_packages_secure
}

# Evaluate each package for external publishing
all_packages_secure {
    count([pkg | 
        repo := input.repositories[_];
        pkg := repo.packages[_];
        pkg.latest_version.origin.origin_type == "INTERNAL";
        pkg.origin_configuration.restrictions.upstream == "ALLOW"
    ]) == 0
}

# Skip if no repositories exist in input
result = "skip" {
    not input.repositories
}

currentConfiguration := sprintf("%d insecure packages found out of %d total packages", [
    count([pkg | 
        repo := input.repositories[_];
        pkg := repo.packages[_];
        pkg.latest_version.origin.origin_type == "INTERNAL";
        pkg.origin_configuration.restrictions.upstream == "ALLOW"
    ]),
    count([pkg | 
        repo := input.repositories[_];
        pkg := repo.packages[_];
        pkg.latest_version.origin.origin_type == "INTERNAL"
    ])
])

expectedConfiguration := "All internal CodeArtifact packages must not allow external (upstream) publishing"



JSON

{
  "repositories": [
    {
      "region": "us-east-1",
      "arn": "arn:aws:codeartifact:us-east-1:123456789012:repository/myrepo",
      "packages": [
        {
          "name": "internal-lib",
          "namespace": "org",
          "latest_version": {
            "origin": {
              "origin_type": "INTERNAL"
            }
          },
          "origin_configuration": {
            "restrictions": {
              "upstream": "BLOCK"
            }
          }
        }
      ]
    }
  ]
}


SKIP

{
  "repositories": []
}
