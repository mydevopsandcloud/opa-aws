terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

provider "aws" {
  region                      = "us-west-2"
  skip_credentials_validation = true
  skip_requesting_account_id  = true
  skip_metadata_api_check     = true
  access_key                  = "mock_access_key"
  secret_key                  = "mock_secret_key"
}

# Dummy resource example (to match your example)
resource "aws_ecrpublic_repository" "example" {
  repository_name = "example"
}

resource "aws_ecrpublic_repository_policy" "example" {
  repository_name = aws_ecrpublic_repository.example.repository_name
  policy          = data.aws_iam_policy_document.example.json
}

data "aws_iam_policy_document" "example" {
  statement {
    sid    = "new policy"
    effect = "Allow"

    principals {
      type        = "AWS"
      identifiers = ["111111111111"]
    }

    actions = [
      "ecr-public:ListImages",
      "ecr-public:BatchDeleteImage"
    ]
  }
}

# RESOURCE UNDER TEST - FAIL CASE
resource "aws_networkfirewall_rule_group" "fail_case" {
  name        = "stateless-fail-example"
  description = "Stateless rule group without stateless_rule"
  capacity    = 100
  type        = "STATELESS"

  rule_group {
    rules_source {
      # No stateless_rules_and_custom_actions block or stateless_rule here
    }
  }

  tags = {
    Env = "TestFail"
  }
}
